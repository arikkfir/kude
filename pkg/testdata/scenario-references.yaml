apiVersion: kude.kfirs.com/v1alpha1
kind: Scenario
pipeline:
  apiVersion: kude.kfirs.com/v1alpha2
  kind: Pipeline
  resources:
    - configmap.yaml
    - secret.yaml
    - deployment.yaml

resources:
  configmap.yaml: |+
    apiVersion: v1
    kind: ConfigMap
    metadata:
      annotations:
        kude.kfirs.com/previous-name: myconfigmap
      name: myconfigmap-hashed-name
    data:
      fooval: bar
      foopath: bar

  secret.yaml: |+
    apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        kude.kfirs.com/previous-name: mysecret
      name: mysecret-hashed-name
    type: Opaque
    data:
      fooval: YmFy
      foopath: YmFy

  deployment.yaml: |+
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: test
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/component: test
      template:
        metadata:
          labels:
            app.kubernetes.io/component: test
        spec:
          containers:
            - image: test/test
              name: server
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              env:
                - name: FOO1
                  valueFrom:
                    secretKeyRef:
                      key: foo
                      name: mysecret
                - name: FOO2
                  valueFrom:
                    configMapKeyRef:
                      key: foo
                      name: myconfigmap

expected: |+
  apiVersion: v1
  data:
    foopath: bar
    fooval: bar
  kind: ConfigMap
  metadata:
    annotations:
      kude.kfirs.com/previous-name: myconfigmap
    name: myconfigmap-hashed-name
  ---
  apiVersion: v1
  data:
    foopath: YmFy
    fooval: YmFy
  kind: Secret
  metadata:
    annotations:
      kude.kfirs.com/previous-name: mysecret
    name: mysecret-hashed-name
  type: Opaque
  ---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: test
  spec:
    selector:
      matchLabels:
        app.kubernetes.io/component: test
    template:
      metadata:
        labels:
          app.kubernetes.io/component: test
      spec:
        containers:
          - env:
              - name: FOO1
                valueFrom:
                  secretKeyRef:
                    key: foo
                    name: mysecret-hashed-name
              - name: FOO2
                valueFrom:
                  configMapKeyRef:
                    key: foo
                    name: myconfigmap-hashed-name
            image: test/test
            name: server
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
