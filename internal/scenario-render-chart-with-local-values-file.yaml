apiVersion: kude.kfirs.com/v1alpha1
kind: Scenario
package:
  apiVersion: kude.kfirs.com/v1alpha1
  kind: Package
  pipeline:
    - image: ghcr.io/arikkfir/kude/functions/helm
      network: true
      config:
        helm-version: 3.8.1
        args:
          - template
          - helm-remote-chart
          - podinfo
          - --description=Test Helm Remote Chart
          - --include-crds
          - --namespace=test
          - --repo=https://stefanprodan.github.io/podinfo
          - --skip-tests
          - --version=6.1.0
          - --values=values.yaml
      mounts:
        - values.yaml

resources:
  values.yaml: |+
    logLevel: info
    nodeSelector:
      purpose: podinfo

expected: |+
  apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: helm-remote-chart-podinfo
      app.kubernetes.io/version: 6.1.0
      helm.sh/chart: podinfo-6.1.0
    name: helm-remote-chart-podinfo
  spec:
    ports:
      - name: http
        port: 9898
        protocol: TCP
        targetPort: http
      - name: grpc
        port: 9999
        protocol: TCP
        targetPort: grpc
    selector:
      app.kubernetes.io/name: helm-remote-chart-podinfo
    type: ClusterIP
  ---
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: helm-remote-chart-podinfo
      app.kubernetes.io/version: 6.1.0
      helm.sh/chart: podinfo-6.1.0
    name: helm-remote-chart-podinfo
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: helm-remote-chart-podinfo
    strategy:
      rollingUpdate:
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "9898"
          prometheus.io/scrape: "true"
        labels:
          app.kubernetes.io/name: helm-remote-chart-podinfo
      spec:
        containers:
          - command:
              - ./podinfo
              - --port=9898
              - --cert-path=/data/cert
              - --port-metrics=9797
              - --grpc-port=9999
              - --grpc-service-name=podinfo
              - --level=info
              - --random-delay=false
              - --random-error=false
            env:
              - name: PODINFO_UI_COLOR
                value: '#34577c'
            image: ghcr.io/stefanprodan/podinfo:6.1.0
            imagePullPolicy: IfNotPresent
            livenessProbe:
              exec:
                command:
                  - podcli
                  - check
                  - http
                  - localhost:9898/healthz
              initialDelaySeconds: 1
              timeoutSeconds: 5
            name: podinfo
            ports:
              - containerPort: 9898
                name: http
                protocol: TCP
              - containerPort: 9797
                name: http-metrics
                protocol: TCP
              - containerPort: 9999
                name: grpc
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - podcli
                  - check
                  - http
                  - localhost:9898/readyz
              initialDelaySeconds: 1
              timeoutSeconds: 5
            resources:
              limits: null
              requests:
                cpu: 1m
                memory: 16Mi
            volumeMounts:
              - mountPath: /data
                name: data
        nodeSelector:
          purpose: podinfo
        terminationGracePeriodSeconds: 30
        volumes:
          - emptyDir: {}
            name: data
