name: Build Commit

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - synchronize
      - opened
      - reopened

defaults:
  run:
    shell: bash -eu {0}

env:
  GO_VERSION: "1.18"

jobs:

  discover-functions:
    outputs:
      functions: ${{ steps.discover.outputs.functions }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: discover
        run: echo "::set-output name=functions::$(ls -d * | jq -R -s -c 'split("\n")[:-1]')"
        working-directory: cmd/functions

  build-functions:
    name: "Build function: ${{ matrix.function }}"
    needs: discover-functions
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        function: ${{fromJson(needs.discover-functions.outputs.functions)}}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ matrix.function }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}-${{ matrix.function }}-
            buildx-${{ runner.os }}-
            buildx-
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: docker-meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/arikkfir/kude/functions/${{ matrix.function }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=,format=short
            type=sha,prefix=,format=long
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
      - uses: docker/build-push-action@v2
        with:
          build-args: function=${{ matrix.function }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          file: cmd/functions/${{ matrix.function }}/Dockerfile
          labels: ${{ steps.docker-meta.outputs.labels }}
          push: true
          tags: ${{ steps.docker-meta.outputs.tags }}
      - run: rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  verify:
    name: Verify
    needs: build-functions
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: golang-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-${{ github.sha }}
          restore-keys: |
            golang-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-
            golang-${{ runner.os }}-
      - run: go mod download
      - run: go vet
      - run: |
          go test -ldflags "-X 'github.com/arikkfir/kude/pkg.gitCommit=${GITHUB_SHA}'" \
                  -v \
                  -vet=off \
                  -race \
                  -shuffle ${SHUFFLE_SEED} \
                  -coverprofile=coverage.txt \
                  -covermode=atomic \
                  ./...
        env:
          SHUFFLE_SEED: ${{ github.run_number }}
      - uses: codecov/codecov-action@v3
        if: always()
