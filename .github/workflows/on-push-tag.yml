name: Tag
on:
  push:
    tags: [ v* ]
defaults:
  run:
    shell: bash -eu {0}
# TODO: detect if most recent release and tag as latest
jobs:
  discover-functions:
    outputs:
      functions: ${{ steps.discover.outputs.functions }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - id: discover
        run: echo "::set-output name=functions::$(ls -d * | jq -R -s -c 'split("\n")[:-1]')"
        working-directory: functions
  tag-functions:
    name: Tag function ${{ matrix.function }}
    needs: [ discover-functions ]
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-20.04
    steps:
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: docker-meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/arikkfir/kude/functions/${{ matrix.function }}
          tags: |
            type=schedule,enabled=false
            type=semver,pattern={{version}}
            type=semver,pattern=v{{major}}
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=tag
      - run: |-
          for tag in ${{ steps.docker-meta.outputs.tags }}; do
            echo ${tag}
          done
          #docker pull ${IMAGE}:${{ github.sha }} .
          #docker tag ${IMAGE}:${{ github.sha }} ${IMAGE}:${{ github.ref_name }}
          #docker push ${IMAGE}:${{ github.ref_name }}
        #env:
        #  IMAGE: ghcr.io/arikkfir/kude/functions/${{ matrix.function }}
        working-directory: functions/${{ matrix.function }}
    strategy:
      matrix:
        function: ${{fromJson(needs.discover-functions.outputs.functions)}}
  cli:
    name: Tag CLI ${{ matrix.os }}
    runs-on: ubuntu-20.04
    steps:
      - uses: google-github-actions/auth@v0
        with:
          service_account: kude-github-actions@arikkfir.iam.gserviceaccount.com
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0
      - run: gsutil cp gs://arikkfir-artifacts/kude/kude-${{ matrix.os }}-${{ github.sha }} gs://arikkfir-artifacts/kude/kude-${{ matrix.os }}-${{ github.ref_name }}
    strategy:
      matrix:
        os: [ darwin, linux ]
#  release:
#    name: Create Release
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: google-github-actions/auth@v0
#        with:
#          service_account: kude-github-actions@arikkfir.iam.gserviceaccount.com
#          credentials_json: ${{ secrets.GCP_SA_KEY }}
#      - uses: google-github-actions/setup-gcloud@v0
#      - run: gsutil cp 'gs://arikkfir-artifacts/kude/kude-*-${{ github.ref_name }}' .
#      - uses: softprops/action-gh-release@v1
#        with:
#          draft: false
#          prerelease: false
#          files: kude-*-${{ github.ref_name }}
#          fail_on_unmatched_files: true
#          generate_release_notes: true
